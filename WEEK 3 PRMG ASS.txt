def expanding(l):
    flag=0
    sam=0
    for i in range(len(l)-1):
        if(flag<(abs(l[i+1]-l[i]))):
            flag=abs(l[i+1]-l[i])
            sam=sam+1
    if(sam==(len(l)-1)):
        return True
    else:
        return False 
      
      
def sumsquare(l):
    sam=[]
    odd=0
    even=0
    for i in l:
        if(i%2!=0):
            odd=odd+i*i
        else:
            even=even+i*i
    sam.append(odd)
    sam.append(even)
    return sam
  
  
def transpose(m):
    rez = [[m[j][i] for j in range(len(m))] for i in range(len(m[0]))]
    ans=[]
    for row in rez:
            ans.append(row)
    return(ans)


  
  
OUPUT:


Sample Test Cases
Input	Output
Test Case 1	
expanding([1,3,7,2,9])
True
Test Case 2	
expanding([1,3,7,2,-3])
False
Test Case 3	
expanding([1,3,7,10])
False
Test Case 4	
sumsquare([1,3,5])
[35, 0]
Test Case 5	
sumsquare([2,4,6])
[0, 56]
Test Case 6	
sumsquare([-1,-2,3,7])
[59, 4]
Test Case 7	
transpose([[1,2,3],[4,5,6]])
[[1, 4], [2, 5], [3, 6]]
Test Case 8	
transpose([[1],[2],[3]])
[[1, 2, 3]]
Test Case 9	
transpose([[3]])
[[3]]